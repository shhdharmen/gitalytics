fragment UserData on User {
  avatarUrl
  bio
  name
  url
  login
}

fragment ContributionsCollectionData on ContributionsCollection {
  totalRepositoryContributions
  totalCommitContributions
  totalRepositoriesWithContributedCommits
  totalIssueContributions
  totalRepositoriesWithContributedIssues
  totalPullRequestContributions
  totalRepositoriesWithContributedPullRequests
  totalPullRequestReviewContributions
  totalRepositoriesWithContributedPullRequestReviews
  repositoryContributions(first: 100) {
    edges {
      node {
        repository {
          isFork
          stargazerCount
          forkCount
        }
      }
    }
  }
  issueContributions(first: 100) {
    edges {
      node {
        issue {
          closed
        }
      }
    }
  }
  pullRequestContributions(first: 100) {
    edges {
      node {
        pullRequest {
          closed
          merged
          changedFiles
        }
      }
    }
  }
  pullRequestReviewContributions(first: 100) {
    edges {
      node {
        pullRequestReview {
          comments {
            totalCount
          }
        }
      }
    }
  }
}

query TotalContributions($login: String!, $from: DateTime, $to: DateTime) {
  user(login: $login) {
    ...UserData
    contributionsCollection(from: $from, to: $to) {
      ...ContributionsCollectionData
    }
  }
  rateLimit {
    limit
    cost
    remaining
    resetAt
  }
}

query UserLogin($login: String!) {
  user(login: $login) {
    ...UserData
  }
  rateLimit {
    limit
    cost
    remaining
    resetAt
  }
}
